/**
 * Alipay.com Inc. Copyright (c) 2004-2018 All Rights Reserved.
 */
package algorithm.String;

/**
 *  字符串将空格替换为 %20
 *   这种操作，c++似乎还可以考思路和实现，c++实现最大化效率用的指针操作
 *   对java没法适用
 *   java 因为封装类比较完善，其实似乎没什么可以考的：
 *   1 利用stringBuilder另外建一个
 *   2 利用正则表达式
 *
 *   这里重点要体会这样一个思路：有些时候，对于数组操作，从后往前遍历可以减少
 *   元素移动次数，参看第相关题2
 * @author wb-ywh474663
 * @version $Id: ReplaceBlank.java, v 0.1 2018年12月11日 10:05 wb-ywh474663 Exp $
 */
public class ReplaceBlank {

    public static String replaceBlank(String string){
        return null;
    }

    /**
     * 合并两个有序数组，假设都从小到大排列，要求
     * 合并后的数组也是从小到大排列，另外假设
     * array1空余空间可以容纳array2，也就是不需要额外的存储空间
     * @param array1
     * @param array2
     * @return
     */
    public static int[] mergeTwoArrays(int[] array1, int[] array2){
        return null;
    }

}